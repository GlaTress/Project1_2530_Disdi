LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;


ENTITY TwosComplement IS

    GENERIC(MAX_WIDTH: INTEGER := 4);

    PORT   (A : IN  STD_LOGIC_VECTOR(MAX_WIDTH -1 DOWNTO 0);
            Complement : OUT STD_LOGIC_VECTOR(MAX_WIDTH -1 DOWNTO 0)
           );
    
END ENTITY TwosComplement;


ARCHITECTURE TwosComplementArch OF TwosComplement IS

    SIGNAL C : STD_LOGIC_VECTOR (MAX_WIDTH+1 DOWNTO 0);
    SIGNAL Sum : STD_LOGIC_VECTOR (MAX_WIDTH-1 DOWNTO 0);
    SIGNAL ComplA : STD_LOGIC_VECTOR (MAX_WIDTH DOWNTO 0);
    SIGNAL temp_A : STD_LOGIC_VECTOR (MAX_WIDTH DOWNTO 0);

BEGIN

    C(0) <= '1';

    temp_A <= A(MAX_WIDTH -1) & A;
    OnesComplement: FOR i IN 0 TO MAX_WIDTH GENERATE
        ComplA(i) <= '1' XOR temp_A(i);
    END GENERATE;

    Adders: FOR i IN 0 TO MAX_WIDTH-1 GENERATE
        Adder: ENTITY WORK.HalfAdder
        PORT MAP   (    A => ComplA(i),
                        B=> C(i),
                        S => Sum(i),
                        Cout => C(i+1)
                   );

    Complement <= Sum;

    END GENERATE;


END TwosComplementArch;