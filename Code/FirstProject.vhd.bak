LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;

ENTITY FirstProject IS
    GENERIC(MAX_WIDTH: INTEGER := 5+1);
    
    PORT   (OpCode : IN      STD_LOGIC_VECTOR(3 DOWNTO 0);
            A :      IN      STD_LOGIC_VECTOR(4   DOWNTO 0);
            B :      IN      STD_LOGIC_VECTOR(4   DOWNTO 0);
            C :      IN      STD_LOGIC_VECTOR(3 DOWNTO 0);
            Result : OUT     STD_LOGIC_VECTOR(11 DOWNTO 0)
           );
END ENTITY FirstProject;

ARCHITECTURE FirstProjectArch OF FirstProject IS

    TYPE SignF IS ARRAY(0 TO 6) OF STD_LOGIC_VECTOR(MAX_WIDTH-1 DOWNTO 0);
    TYPE SignT IS ARRAY(0 TO 8) OF STD_LOGIC_VECTOR(MAX_WIDTH*2 - 2 DOWNTO 0);

    SIGNAL SignalV : SignF;
    SIGNAL SignalX : SignT;
    SIGNAL Temp_A :             STD_LOGIC_VECTOR(MAX_WIDTH-1 DOWNTO 0);
    SIGNAL Temp_B :             STD_LOGIC_VECTOR(MAX_WIDTH-1 DOWNTO 0);
    SIGNAL Temp_C :             STD_LOGIC_VECTOR(MAX_WIDTH-1 DOWNTO 0);
    SIGNAL Sum :                STD_LOGIC_VECTOR(MAX_WIDTH DOWNTO 0);
    SIGNAL ResSum :             STD_LOGIC_VECTOR(MAX_WIDTH*2 - 1 DOWNTO 0);
    SIGNAL Selop :              STD_LOGIC_VECTOR(7 DOWNTO 0);
    SIGNAL Gate_Ripple :        STD_LOGIC_VECTOR(1 DOWNTO 0);

    SIGNAL ZEROS              : STD_LOGIC_VECTOR(MAX_WIDTH - 2 DOWNTO 0) := (others => '0');

BEGIN

    Temp_A <= "0" & A;
    Temp_B <= "0" & B;
    Temp_C <= "00" & C;

    SignalX(4) <= ZEROS & Temp_A;
    SignalX(5) <= ZEROS & Temp_B;

    WITH OpCode SELECT
         Selop <=     "00000000" WHEN "0000",
                      "00000001" WHEN "0001",
                      "00000010" WHEN "0010",
                      "01000000" WHEN "0011",
                      "00000100" WHEN "0100",-- check
                      "00000101" WHEN "0101",-- check
                      "00000110" WHEN "0110",-- check
                      "10000000" WHEN "0111",-- check
                      "00101100" WHEN "1000",-- check
                      "00001001" WHEN "1001",-- check
                      "00101110" WHEN "1010",-- check
                      "11000000" WHEN "1011",-- check
                      "00001100" WHEN "1100",-- check
                      "00001101" WHEN "1101",-- check
                      "00001110" WHEN "1110",-- check
                      "00111110" WHEN "1111",
                      "XXXXXXXX" WHEN OTHERS;


    SignalV(0) <= Temp_A          WHEN Selop(0) = '0' ELSE
                  Temp_B;

    SignalV(1) <= Temp_B          WHEN Selop(0) = '0' ELSE
                  Temp_A;

    SignalV(2) <= Temp_C          WHEN Selop(1) = '0' ELSE
                  Temp_B;

    SignalV(3) <= Temp_B          WHEN Selop(1) = '0' ELSE
                  Temp_C;



    SignalV(4) <= SignalV(1) WHEN Selop(0) = '1' ELSE
                  SignalV(3);

    SignalV(5) <= SignalV(2) WHEN Selop(4) = '0' ELSE
                  SignalV(0);

    SignalV(6) <= SignalV(0) WHEN Selop(4) = '0' ELSE
                  SignalV(2);


    SignalX(0) <= ZEROS & SignalV(4);

    Mult: ENTITY WORK.Multiplier
        GENERIC MAP
        (
            MAX_WIDTH => MAX_WIDTH
        )
        PORT MAP(
            A => SignalV(2),
            B => SignalV(0),
            Res(10 DOWNTO 0) => SignalX(1)
        );

    Add_Sub_V : ENTITY WORK.RippleCAdder
        GENERIC MAP 
        (
            MAX_WIDTH => MAX_WIDTH
        )
        PORT MAP (
            A => SignalV(5),
            B => SignalV(6),
            Mode => Selop(5),
            S => Sum
        );

    SignalX(2) <= Sum(MAX_WIDTH) & Sum(MAX_WIDTH) & Sum(MAX_WIDTH) & Sum(MAX_WIDTH) & Sum;


    SignalX(3) <= SignalX(1) WHEN Selop(3) = '0' ELSE
              SignalX(2);


    Add_Sub_X : ENTITY WORK.RippleCAdder
        GENERIC MAP 
        (
            MAX_WIDTH => 11
        )
        PORT MAP (
            A => SignalX(3),
            B => SignalX(0),
            Mode => Selop(2),
            S => ResSum
        );

    SignalX(6) <= SignalX(4) AND SignalX(5);
    SignalX(7) <= SignalX(4) OR SignalX(5);
    SignalX(8) <= SignalX(4) XOR SignalX(5);


    Gate_Ripple <= Selop(7) & Selop(6);

    WITH Gate_Ripple SELECT
    Result <=           ResSum     WHEN "00",
                  '0' & SignalX(6) WHEN "01",
                  '0' & SignalX(7) WHEN "10",
                  '0' & SignalX(8) WHEN "11",
                      "XXXXXXXXXXXX" WHEN OTHERS;

END FirstProjectArch;